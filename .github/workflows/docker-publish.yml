name: Docker Image CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    strategy:
      matrix:
        module: [ article_mod, chat_room, user_mod ] # 动态生成或手动列出所有模块
    runs-on: ubuntu-latest


    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      # 添加 Maven 构建步骤
      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'adopt'

      - name: Build with Maven
        working-directory: .
        run: mvn clean package -DskipTests -e

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to Alibaba Cloud Container Registry
        run: |
          echo "Logging in to Alibaba Cloud Container Registry..."
        # 直接调用aliyun cr token获取登录token，无需额外配置
          TOKEN=$(aliyun cr token \
            --instance "https://${{ secrets.ALIYUN_REGISTRY }}/acr-auth" \
            --username "${{ secrets.ALIYUN_ACCESS_KEY_ID}}" \
            --password "${{ secrets.ALIYUN_ACCESS_KEY_SECRET}}")

        # 使用获取的token进行docker login
            docker login \
             --username "${{ secrets.ALIYUN_ACCESS_KEY_ID}}" \
             --password-stdin https://${{ secrets.ALIYUN_REGISTRY }}/acr-auth <<< "$TOKEN"
        env:
          ALIYUN_ACCESS_KEY_ID: ${{ secrets.ALIYUN_ACCESS_KEY_ID }}
          ALIYUN_ACCESS_KEY_SECRET: ${{ secrets.ALIYUN_ACCESS_KEY_SECRET }}
          ALIYUN_REGISTRY: ${{ secrets.ALIYUN_REGISTRY }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
            context: ./${{ matrix.module }}
            file: ./${{ matrix.module }}/Dockerfile
            push: true
            tags: lituizi/${{ matrix.module }}:latest
